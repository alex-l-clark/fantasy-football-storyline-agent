[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sleeper-agent"
version = "1.0.0"
description = "A comprehensive CLI tool for analyzing Sleeper Fantasy Football league data"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Alex Clark", email = "alex.l.clark@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment :: Multi-User Dungeons (MUD)",
    "Topic :: Utilities",
]
keywords = ["fantasy", "football", "sleeper", "cli", "analysis", "csv", "export"]
requires-python = ">=3.11"
dependencies = [
    "httpx>=0.24.0",
    "pandas>=2.0.0", 
    "typer[all]>=0.9.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "tenacity>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/alex-l-clark/fantasy-football-storyline-agent"
Repository = "https://github.com/alex-l-clark/fantasy-football-storyline-agent.git"
Issues = "https://github.com/alex-l-clark/fantasy-football-storyline-agent/issues"

[project.scripts]
sleeper-agent = "sleeper_agent.cli:app"

[tool.setuptools]
packages = ["sleeper_agent"]

[tool.setuptools.package-data]
sleeper_agent = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "sleeper_agent/tests",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]

[tool.coverage.run]
source = ["sleeper_agent"]
omit = [
    "sleeper_agent/tests/*",
    "*/venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError", 
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]